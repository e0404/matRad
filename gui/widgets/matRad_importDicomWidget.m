classdef matRad_importDicomWidget < matRad_Widget
    % matRad_importDicomWidget class to generate GUI widget to import dicom
    % files
    % 
    %
    % References
    %   -
    %
    % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %
    % Copyright 2020 the matRad development team. 
    % 
    % This file is part of the matRad project. It is subject to the license 
    % terms in the LICENSE file found in the top-level directory of this 
    % distribution and at https://github.com/e0404/matRad/LICENSES.txt. No part 
    % of the matRad project, including this file, may be copied, modified, 
    % propagated, or distributed except according to the terms contained in the 
    % LICENSE file.
    %
    % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 

    properties
    end
    
    methods
        
        function this = matRad_importDicomWidget(handleParent)
            %MATRAD_IMPORTDICOMWIDGET Construct an instance of this class
            
            matRad_cfg = MatRad_Config.instance();
            if nargin < 1
                handleParent = figure(...
                    'IntegerHandle','off',...
                    'Units','characters',...
                    'MenuBar','none',...
                    'NumberTitle','off',...
                    'Position',[25 10 220 40],...
                    'Color',matRad_cfg.gui.backgroundColor,...
                    'Name','Import Dicom');
            end
            this = this@matRad_Widget(handleParent);
        end
        
        
        
        % INITIALIZE FUNCTION
        function this = initialize(this)
            handles = this.handles;
            handles.output = handles;
            
            axes(handles.axesMatRadLogo)
            [path,name,ext] = fileparts(mfilename('fullpath'));
            
            [im, ~, alpha] = imread([path filesep '..' filesep '..' filesep 'gfx/matrad_logo.png']);
            q = image(im);
            axis equal off
            set(q, 'AlphaData', alpha);
            % show dkfz logo
            axes(handles.axesDKFZLogo)
            [im, ~, alpha] = imread([path filesep '..' filesep  '..' filesep 'gfx/DKFZ_Logo.png']);
            p = image(im);
            axis equal off
            set(p, 'AlphaData', alpha);
            
            % Update handles structure
            % guidata(hObject, handles);
            this.handles = handles;
        end        
        
    end
    
    % CALLBACKS
    methods
        
        % H15 BROWSER BUTTON CALLBACK
        function patDir = browse_button_Callback(this, hObject, eventdata)
            handles = this.handles;
            patDir = uigetdir('', 'Choose the input directory...');
            if patDir ~= 0
                patDir = [patDir filesep];
                %handles.dir_path_field.String = patDir;
                set(handles.dir_path_field,'String',patDir);
                % Update handles structure
                % guidata(hObject, handles);
                this.handles = handles;
                this.scan(hObject, eventdata)
            end
        end
        
        % H17 PATIENT LISTBOX CALLBACK
        function this = patient_listbox_Callback(this, hObject, eventdata)
            handles = this.handles;
            if ~isempty(get(hObject,'String'))
                % enable Import button
                set(handles.import_button,'Enable','on');
                
                % handles.filelist:
                %   1. Filepath
                %   2. Modality
                %   3. PatientID
                %   4. SeriesUID
                %   5. SeriesNumber
                %   9. res_x
                %   10. res_y
                %   11. res_z
                %   12. detailed dose description - currently not in use for GUI user
                patient_listbox = get(handles.patient_listbox,'String');
                selected_patient = patient_listbox(get(handles.patient_listbox,'Value'));
                % this gets a list of rtss series for this patient
                set(handles.rtseries_listbox,'Value',1); % set dummy value to one
                set(handles.rtseries_listbox,'String',handles.fileList(strcmp(handles.fileList(:,2), 'RTSTRUCT') & strcmp(handles.fileList(:,3), selected_patient),4));
                % this gets a list of rt plan series for this patient
                set(handles.rtplan_listbox,'Value',[]); % set dummy value to none
                set(handles.rtplan_listbox,'String',handles.fileList(strcmp(handles.fileList(:,2), 'RTPLAN') & strcmp(handles.fileList(:,3), selected_patient),4));
                % this gets a list of dose series for this patient
                set(handles.doseseries_listbox,'Value',[]); % set dummy value to none
                set(handles.doseseries_listbox,'String',handles.fileList(strcmp(handles.fileList(:,2), 'RTDOSE') & strcmp(handles.fileList(:,3), selected_patient),4));
                % selectedDose
                
                if get(handles.SeriesUID_radiobutton,'Value') == 1
                    % this gets a list of ct series for this patient
                    set(handles.ctseries_listbox,'Value',1); % set dummy value to one
                    set(handles.ctseries_listbox,'String',unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient),4)));
                    
                    selectedDoseSeriesString = get(handles.doseseries_listbox,'String');
                    % this gets a resolution for this patient
                    selectedCtSeriesString = get(handles.ctseries_listbox,'String');
                    if ~isempty(selectedCtSeriesString)
                        res_x = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),9));
                        res_y = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),10));
                        res_z = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),11));
                    else
                        res_x = NaN; res_y = NaN; res_z = NaN;
                    end
                else
                    set(handles.ctseries_listbox,'Value',1); % set dummy value to one
                    set(handles.ctseries_listbox,'String',unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient),5)));
                    selectedCtSeriesString = get(handles.ctseries_listbox,'String');
                    if ~isempty(selectedCtSeriesString)
                        res_x = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),9));
                        res_y = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),10));
                        res_z = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),11));
                    else
                        res_x = NaN; res_y = NaN; res_z = NaN;
                    end
                end
                set(handles.resx_edit,'String',res_x);
                set(handles.resy_edit,'String',res_y);
                if numel(res_z) > 1
                    set(handles.resz_edit,'String','not equi');
                else
                    set(handles.resz_edit,'String',res_z);
                end
                % Update handles structure
                % guidata(hObject, handles);
                this.handles = handles;
            end
        end
        
        % H22 IMPORT BUTTON CALLBACK
        function this = import_button_Callback(this, hObject, eventdata)
            handles = this.handles;
            patient_listbox = get(handles.patient_listbox,'String');
            ctseries_listbox = get(handles.ctseries_listbox,'String');
            rtplan_listbox = get(handles.rtplan_listbox,'String');
            doseseries_listbox = get(handles.rtplan_listbox,'String');
            if ~isempty(patient_listbox)
                selected_patient = patient_listbox(get(handles.patient_listbox,'Value'));
            end
            if ~isempty(ctseries_listbox)
                selected_ctseries = ctseries_listbox(get(handles.ctseries_listbox,'Value'));
            end
            if ~isempty(rtplan_listbox)
                selected_rtplan = rtplan_listbox(get(handles.rtplan_listbox,'Value'));
            end
            
            if get(handles.SeriesUID_radiobutton,'Value') == 1
                files.ct = handles.fileList(strcmp(handles.fileList(:,3), selected_patient) & ...
                    strcmp(handles.fileList(:,4), selected_ctseries),:);
                
                %files.rtss = handles.fileList(strcmp(handles.fileList(:,3), selected_patient) & ...
                %    strcmp(handles.fileList(:,4), selected_rtseries),:);
            else
                files.ct = handles.fileList(strcmp(handles.fileList(:,3), selected_patient) & ...
                    strcmp(cellfun(@num2str,handles.fileList(:,5),'UniformOutput',false), selected_ctseries) & strcmp(handles.fileList(:,2),'CT'),:);
                
                %files.rtss = handles.fileList(strcmp(handles.fileList(:,3), selected_patient) & ...
                %    strcmp(handles.fileList(:,5), selected_rtseries),:);
            end
            
            allRtss = handles.fileList(strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,2),'RTSTRUCT'),:);
            if ~isempty(allRtss)
                files.rtss = allRtss(get(handles.rtseries_listbox,'Value'),:);
            else
                files.rtss = [];
            end
            
            files.resx = str2double(get(handles.resx_edit,'String'));
            files.resy = str2double(get(handles.resy_edit,'String'));
            % check if valid assignment is made when z slices are not equi-distant
            if strcmp(get(handles.resz_edit,'String'),'not equi')
                this.showError('Ct data not sliced equi-distantly in z direction! Chose uniform resolution.');
                return;
            else
                files.resz = str2double(get(handles.resz_edit,'String'));
            end
            % selected RT Plan
            rtplan = handles.fileList(strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,2),'RTPLAN'),:);
            if ~isempty(rtplan) && ~isempty(get(handles.rtplan_listbox,'Value'))
                files.rtplan = rtplan(get(handles.rtplan_listbox,'Value'),:);
            end
            
            % selected RT Dose
            rtdose = handles.fileList(strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,2),'RTDOSE'),:);
            if ~isempty(rtdose) && ~isempty(get(handles.doseseries_listbox,'Value'))
                selectedRtDose   = get(handles.doseseries_listbox,'String');
                selectedRtDoseIx = NaN*ones(1,numel(selectedRtDose));
                for i = 1:numel(selectedRtDose)
                    selectedRtDoseIx(i) = find(strcmp(rtdose(:,4),selectedRtDose{i}));
                end
                files.rtdose = rtdose(selectedRtDoseIx,:);
            end
            
            % check if we should use the dose grid resolution
            files.useDoseGrid = get(handles.checkbox3,'Value');
            
            % dicomMetaBool: store complete DICOM information and patientName or not
            dicomMetaBool = logical(get(handles.checkPatientName,'Value'));
            matRad_importDicom(files, dicomMetaBool);
            
            this.handles = handles;
        end
        
        % H23 CANCEL BUTTON CALLBACK
        function this = cancel_button_Callback(this, hObject, eventdata)
               
            close;
        end
        
        % RESCAN BUTTON CALLBACK; NICHT IN CREATELAYOUT VORHANDEN
        function this = rescan_button_Callback(this, hObject, eventdata)
        end
        
        % H24 SERIES UID RADIOBUTTON CALLBACK
        function this = SeriesUID_radiobutton_Callback(this, hObject, eventdata)
            handles = this.handles;
            if get(hObject,'Value') == 1
                set(handles.SeriesNumber_radiobutton,'Value',0);
            else
                set(hObject,'Value',1);
                set(handles.SeriesNumber_radiobutton,'Value',0);
            end
            if isfield(handles, 'fileList')
                patient_listbox = get(handles.patient_listbox,'String');
                selected_patient = patient_listbox(get(handles.patient_listbox,'Value'));
                set(handles.ctseries_listbox,'String',unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient),4)));
                set(handles.rtseries_listbox,'String',unique(handles.fileList(strcmp(handles.fileList(:,2), 'RTSTRUCT') & strcmp(handles.fileList(:,3), selected_patient),4)));
                set(handles.doseseries_listbox,'String',handles.fileList(strcmp(handles.fileList(:,2), 'RTDOSE') & strcmp(handles.fileList(:,3), selected_patient),4));
                set(handles.rtplan_listbox,'String',unique(handles.fileList(strcmp(handles.fileList(:,2), 'RTPLAN') & strcmp(handles.fileList(:,3), selected_patient),4)));
            else
                fprintf('No patient loaded, so just switching default display option to SeriesUID. \n');
            end
            %guidata(hObject, handles);
            this.handles = handles;
        end
        
        % H25 SERIESNUMBER RADIO BUTTON CALLBACK
        function this = SeriesNumber_radiobutton_Callback(this, hObject, eventdata)
            handles = this.handles;
            
            if get(hObject,'Value') == 1
                set(handles.SeriesUID_radiobutton,'Value',0);
            else
                set(hObject,'Value',1);
                set(handles.SeriesUID_radiobutton,'Value',0);
            end
            if isfield(handles, 'fileList')
                patient_listbox = get(handles.patient_listbox,'String');
                selected_patient = patient_listbox(get(handles.patient_listbox,'Value'));
                % set(handles.ctseries_listbox,'String',unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient),5)));
                set(handles.ctseries_listbox,'String',unique(cell2mat(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient),5))));
                
            else
                fprintf('No patient loaded, so just switching default display option to SeriesNumber. \n');
            end
            % guidata(hObject, handles);
            this.handles = handles;
        end
        
        
        % H34 DOSESERIES LISTBOX CALLBACK
        function this = doseseries_listbox_Callback(this, hObject, eventdata)
            handles = this.handles;
            
            if ~isempty(get(hObject,'Value'))
                set(handles.checkbox3,'Enable','on');
            else
                set(handles.checkbox3,'Value',0);
                set(handles.checkbox3,'Enable','off');
                % retrieve and display resolution for DICOM ct cube
                patient_listbox = get(handles.patient_listbox,'String');
                selected_patient = patient_listbox(get(handles.patient_listbox,'Value'));
                selectedCtSeriesString = get(handles.ctseries_listbox,'String');
                if get(handles.SeriesUID_radiobutton,'Value') == 1
                    if ~isempty(selectedCtSeriesString)
                        res_x = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),9));
                        res_y = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),10));
                        res_z = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),11));
                    else
                        res_x = NaN; res_y = NaN; res_z = NaN;
                    end
                else
                    if ~isempty(selectedCtSeriesString)
                        res_x = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),9));
                        res_y = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),10));
                        res_z = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),11));
                    else
                        res_x = NaN; res_y = NaN; res_z = NaN;
                    end
                end
                set(handles.resx_edit,'String',res_x);
                set(handles.resy_edit,'String',res_y);
                if numel(res_z) > 1
                    set(handles.resz_edit,'String','not equi');
                else
                    set(handles.resz_edit,'String',res_z);
                end
                
            end
            
            this.handles = handles;
        end
        
        % H35 RTPLAN LISTBOX CALLBACK
        function this = rtplan_listbox_Callback(this, hObject, eventdata)
            handles = this.handles;
            
            contents = cellstr(get(hObject,'String'));
            if ~isempty(get(hObject,'Value')) && numel(get(hObject,'Value')) == 1
                
                selectedPlan = contents{get(hObject,'Value')};
                % point at plan in listbox
                selectedPlanLoc = strcmp(handles.fileList(:,4),selectedPlan);
                
                % show only the doses corresponding to the plan
                corrDoses = [handles.fileList{selectedPlanLoc,13}];
                numOfDoses = numel(corrDoses);
                corrDosesLoc = zeros(size(handles.fileList(:,1),1),1);
                for j = 1:numOfDoses
                    if ~isnan(corrDoses{j})
                        corrDosesLoc = corrDosesLoc | strcmp(handles.fileList(:,4),corrDoses{j});
                    end
                end
                
                if sum(corrDosesLoc) == 0
                    this.showWarning('no rt dose file directly associated to plan file. showing all rt dose files.');
                    corrDosesLoc = strcmp(handles.fileList(:,2),'RTDOSE');
                end
                
                set(handles.doseseries_listbox,'Value',[]); % set dummy value to one
                set(handles.doseseries_listbox,'String',handles.fileList(corrDosesLoc,4));
                
                % disable checkbox for use dose grid is currently checked
                if get(handles.checkbox3,'Value') == 1
                    set(handles.checkbox3,'Value',0);
                    checkbox3_Callback(handles.checkbox3,[], handles);
                end
                set(handles.checkbox3,'Enable','off');
                
            elseif numel(get(hObject,'Value')) >=2
                this.showWarning('More than one RTPLAN selected. Unsetting selection ...');
                patient_listbox_Callback(this, hObject, eventdata);
            else
                patient_listbox_Callback(this, hObject, eventdata);
            end
            
            this.handles = handles;
            
        end
        
        % H36 DIR PATH FIELD CALLBACK
        function this = dir_path_field_Callback(this, hObject, eventdata)
            handles = this.handles;
            patDir = get(handles.dir_path_field,'String');
            if patDir(end) ~= filesep;
                patDir = [patDir filesep];
                set(handles.dir_path_field,'String',patDir);
                % guidata(hObject, handles);
                this.handles = handles;
            end
            scan(hObject, eventdata);
        end
        
        % H37 CHECK PATIENTNAME CALLBACK
        function this = checkPatientName_Callback(this, hObject, eventdata)
            handles = this.handles;
            % hObject    handle to checkPatientName (see GCBO)
            % eventdata  reserved - to be defined in a future version of MATLAB
            % handles    structure with handles and user data (see GUIDATA)
            %A = get(hObject,'Value');
            
            % Hint: get(hObject,'Value') returns toggle state of checkPatientName
            %guidata(hObject, handles);
            this.handles = handles;
            
        end
        
        % H38 CHECKBOX USE RT DOSE GRID CALLBACK
        function this = checkUseRTdoseGrid_Callback(this, hObject, eventdata)
            % hObject    handle to checkbox3 (see GCBO)
            % eventdata  reserved - to be defined in a future version of MATLAB
            % handles    structure with handles and user data (see GUIDATA)
            
            % Hint: get(hObject,'Value') returns toggle state of checkbox3
            handles = this.handles;
            
            if get(hObject,'Value')
                set(handles.resx_edit,'Enable', 'off');
                set(handles.resy_edit,'Enable', 'off');
                set(handles.resz_edit,'Enable', 'off');
                % retrieve and display resolution for DICOM dose cube
                doseFilesInList = get(handles.doseseries_listbox,'String');
                selectedDoseFiles = get(handles.doseseries_listbox,'Value');
                if isempty(selectedDoseFiles)
                    set(hObject,'Value',0)
                    this.showError('no dose file selected');
                    return;
                end
                for i = 1:numel(selectedDoseFiles)
                    selectedDoseFile = doseFilesInList{selectedDoseFiles(i)};
                    if verLessThan('matlab','9')
                        dicomDoseInfo = dicominfo(handles.fileList{find(strcmp(handles.fileList(:,4),selectedDoseFile)),1});
                    else
                        dicomDoseInfo = dicominfo(handles.fileList{find(strcmp(handles.fileList(:,4),selectedDoseFile)),1},'UseDictionaryVR',true);
                    end
                    res_x{i} = dicomDoseInfo.PixelSpacing(1);
                    res_y{i} = dicomDoseInfo.PixelSpacing(2);
                    res_z{i} = dicomDoseInfo.SliceThickness;
                end
                
                if numel(unique(cell2mat(res_x)))*numel(unique(cell2mat(res_y)))*numel(unique(cell2mat(res_z))) ~= 1
                    set(handles.checkbox3,'Value',0);
                    this.showWarning('Different resolutions in dose file(s)');
                    set(handles.resx_edit,'Enable', 'on');
                    set(handles.resy_edit,'Enable', 'on');
                    set(handles.resz_edit,'Enable', 'on');
                else
                    set(handles.resx_edit,'String',num2str(res_x{1}));
                    set(handles.resy_edit,'String',num2str(res_y{1}));
                    set(handles.resz_edit,'String',num2str(res_z{1}));
                end
                
            else
                set(handles.resx_edit,'Enable', 'on');
                set(handles.resy_edit,'Enable', 'on');
                set(handles.resz_edit,'Enable', 'on');
                % retrieve and display resolution for DICOM ct cube
                patient_listbox = get(handles.patient_listbox,'String');
                selected_patient = patient_listbox(get(handles.patient_listbox,'Value'));
                selectedCtSeriesString = get(handles.ctseries_listbox,'String');
                if get(handles.SeriesUID_radiobutton,'Value') == 1
                    if ~isempty(selectedCtSeriesString)
                        res_x = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),9));
                        res_y = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),10));
                        res_z = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,4), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),11));
                    else
                        res_x = NaN; res_y = NaN; res_z = NaN;
                    end
                else
                    if ~isempty(selectedCtSeriesString)
                        res_x = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),9));
                        res_y = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),10));
                        res_z = unique(handles.fileList(strcmp(handles.fileList(:,2), 'CT') & strcmp(handles.fileList(:,3), selected_patient) & strcmp(handles.fileList(:,5), selectedCtSeriesString{get(handles.ctseries_listbox,'Value')}),11));
                    else
                        res_x = NaN; res_y = NaN; res_z = NaN;
                    end
                end
                set(handles.resx_edit,'String',res_x);
                set(handles.resy_edit,'String',res_y);
                if numel(res_z) > 1
                    set(handles.resz_edit,'String','not equi');
                else
                    set(handles.resz_edit,'String',res_z);
                end
            end
            
            this.handles = handles;
        end
        
    end

    methods (Access = protected)
        function  this = createLayout(this,handleParent) 

            h1 = this.widgetHandle;
            
            matRad_cfg  = MatRad_Config.instance();

            %Create all handles
            % LOGO 
            h2 = axes(...
                'Parent',h1,...
                'CameraPosition',[0.5 0.5 9.16025403784439],...
                'CameraTarget',[0.5 0.5 0.5],...
                'CameraViewAngle',6.60861036031192,...
                'PlotBoxAspectRatio',[1 0.204545454545455 0.204545454545455],...
                'XTick',[0 0.2 0.4 0.6 0.8 1],...
                'XTickLabel',{  '0'; '0.2'; '0.4'; '0.6'; '0.8'; '1' },...
                'YTick',[0 0.5 1],...
                'YTickLabel',{  '0'; '0.5'; '1' },...
                'Position',[0.659070191431176 0.0633333333333333 0.320875113947129 0.13953488372093],...
                'ActivePositionProperty','position',...
                'LooseInset',[0.21882384176291 0.326703619171829 0.159909730519049 0.222752467617156],...
                'FontSize',8,...
                'SortMethod','childorder',...
                'Tag','axesDKFZLogo');

            
            %MATRAD Logo
            h7 = axes(...
                'Parent',h1,...
                'CameraPosition',[0.5 0.5 9.16025403784439],...
                'CameraTarget',[0.5 0.5 0.5],...
                'CameraViewAngle',6.60861036031192,...
                'PlotBoxAspectRatio',[1 0.301587301587302 0.301587301587302],...
                'Colormap',[0.2422 0.1504 0.6603;0.250390476190476 0.164995238095238 0.707614285714286;0.257771428571429 0.181780952380952 0.751138095238095;0.264728571428571 0.197757142857143 0.795214285714286;0.270647619047619 0.21467619047619 0.836371428571429;0.275114285714286 0.234238095238095 0.870985714285714;0.2783 0.255871428571429 0.899071428571429;0.280333333333333 0.278233333333333 0.9221;0.281338095238095 0.300595238095238 0.941376190476191;0.281014285714286 0.322757142857143 0.957885714285714;0.279466666666667 0.344671428571429 0.971676190476191;0.275971428571429 0.366680952380952 0.982904761904762;0.269914285714286 0.3892 0.9906;0.260242857142857 0.412328571428571 0.995157142857143;0.244033333333333 0.435833333333333 0.998833333333333;0.220642857142857 0.460257142857143 0.997285714285714;0.196333333333333 0.484719047619048 0.989152380952381;0.183404761904762 0.507371428571429 0.979795238095238;0.178642857142857 0.528857142857143 0.968157142857143;0.176438095238095 0.549904761904762 0.952019047619048;0.168742857142857 0.570261904761905 0.935871428571428;0.154 0.5902 0.9218;0.146028571428571 0.609119047619048 0.907857142857143;0.13802380952381 0.627628571428572 0.897290476190476;0.124814285714286 0.645928571428571 0.888342857142857;0.111252380952381 0.6635 0.876314285714286;0.0952095238095238 0.679828571428571 0.859780952380952;0.0688714285714285 0.694771428571429 0.839357142857143;0.0296666666666667 0.708166666666667 0.816333333333333;0.00357142857142857 0.720266666666667 0.7917;0.00665714285714287 0.731214285714286 0.766014285714286;0.0433285714285715 0.741095238095238 0.739409523809524;0.096395238095238 0.75 0.712038095238095;0.140771428571429 0.7584 0.684157142857143;0.1717 0.766961904761905 0.655442857142857;0.193766666666667 0.775766666666667 0.6251;0.216085714285714 0.7843 0.5923;0.246957142857143 0.791795238095238 0.556742857142857;0.290614285714286 0.797290476190476 0.518828571428572;0.340642857142857 0.8008 0.478857142857143;0.3909 0.802871428571428 0.435447619047619;0.445628571428572 0.802419047619048 0.390919047619048;0.5044 0.7993 0.348;0.561561904761905 0.794233333333333 0.304480952380953;0.617395238095238 0.787619047619048 0.261238095238095;0.671985714285714 0.779271428571429 0.2227;0.7242 0.769842857142857 0.191028571428571;0.773833333333333 0.759804761904762 0.164609523809524;0.820314285714286 0.749814285714286 0.153528571428571;0.863433333333333 0.7406 0.159633333333333;0.903542857142857 0.733028571428571 0.177414285714286;0.939257142857143 0.728785714285714 0.209957142857143;0.972757142857143 0.729771428571429 0.239442857142857;0.995647619047619 0.743371428571429 0.237147619047619;0.996985714285714 0.765857142857143 0.219942857142857;0.995204761904762 0.789252380952381 0.202761904761905;0.9892 0.813566666666667 0.188533333333333;0.978628571428571 0.838628571428572 0.176557142857143;0.967647619047619 0.8639 0.164290476190476;0.961009523809524 0.889019047619048 0.153676190476191;0.959671428571429 0.913457142857143 0.142257142857143;0.962795238095238 0.937338095238095 0.126509523809524;0.969114285714286 0.960628571428571 0.106361904761905;0.9769 0.9839 0.0805],...
                'XTick',[0 0.2 0.4 0.6 0.8 1],...
                'XTickLabel',{  '0'; '0.2'; '0.4'; '0.6'; '0.8'; '1' },...
                'YTick',[0 0.5 1],...
                'YTickLabel',{  '0'; '0.5'; '1' },...
                'Position',[0.125 0.85 0.229433272394881 0.147058823529412],...
                'ActivePositionProperty','position',...
                'LooseInset',[0.265885262648529 0.319135999073457 0.194300768858541 0.217592726640994],...
                'FontSize',8,...
                'SortMethod','childorder',...
                'Tag','axesMatRadLogo' );

           % Import text 
           h33 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','DICOM Import',...
                'Tooltip', 'Import selected quantites from selected folder',...
                'Style','text',...
                'Position',[0.375 0.8325 0.609323583180987 0.1708823529411765],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'Children',[],...
                'ForegroundColor',[0.0980392156862745 0.305882352941176 0.615686274509804],...
                'Tag','text12',...
                'FontSize',56,...
                'FontName','Century',...
                'FontWeight','demi' );

            %SelectRTPlan text 
            h12 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','RT Plan (SOPInstanceUID)',...
                'Tooltip', 'Select an RT plan',...
                'Style','text',...
                'Position',[0.319051959890611 0.677961527418892 0.152067622441369 0.0391903531438416],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','text11');

            % Text selectRT dose 
            h13 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','RT Dose (SOPInstanceUID)',...
                'Tooltip', 'Select an RT dose',...
                'Style','text',...
                'Position',[0.660893345487694 0.677961527418892 0.226377724372255 0.0391903531438416],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','text10' );

            %Text choose directory
            h14 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','Directory',...
                'Tooltip', 'Choose the import directory',...
                'Style','text',...
                'Position',[0.0438756855575868 0.790661764705882 0.0722120658135283 0.0386029411764706],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','directory_label');

            % Browse button
            h15 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'String','Browse',...
                'Tooltip', 'Choose the input directory',...
                'Position',[0.913162705667276 0.748382352941176 0.0630712979890311 0.0404411764705882],...
                'Callback',@(hObject,event) browse_button_Callback(this,hObject,event),...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','browse_button' );

            %Text Patient ID
            h16 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','Patient ID',...
                'Tooltip', 'Choose a patient',...
                'Style','text',...
                'Position',[0.0447897623400366 0.654632352941177 0.0557586837294333 0.059917312661499],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','patient_label' );

            % Listbox Choose patient
            h17 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'Style','listbox',...
                'Value',1,...
                'Position',[0.0446672743846855 0.491627906976744 0.22971741112124 0.186046511627907],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) patient_listbox_Callback(this,hObject,event),...
                'Tag','patient_listbox',...
                'Tooltip', 'Choose a patient');

            %Text CT series
            h18 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','CT ( ',...
                'Tooltip', 'Choose CT series',...
                'Style','text',...
                'Position',[0.318223253501284 0.431622164800459 0.0464075578022706 0.0335917312661499],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','ct_label' );

            %Listbox CT series
            h19 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'Style','listbox',...
                'Value',1,...
                'Position',[0.318140382862352 0.247441860465116 0.320875113947128 0.186046511627907],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tooltip', 'Choose CT series',...
                'Tag','ctseries_listbox');

            % Test RTstructure set
            h20 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','RT Structure Set (SOPInstanceUID)',...
                'Tooltip', 'Choose RT structure set',...
                'Style','text',...
                'Position',[0.66172205187702 0.426023542922768 0.179000580094473 0.0391903531438415],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','struct_label');

            %Listbox choose RT structure set
            h21 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'Style','listbox',...
                'Value',1,...
                'Position',[0.660893345487694 0.245503875968992 0.320875113947129 0.186046511627907],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Children',[],...
                'Tooltip', 'Choose RT structure set',...
                'Tag','rtseries_listbox');

            % Import Button
            h22 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'String','Import',...
                'Position',[0.181403828623519 0.233875968992248 0.0628988149498633 0.0406976744186047],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) import_button_Callback(this,hObject,event),...
                'Enable','off',...
                'Tag','import_button');

            % Cancel button
            h23 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'String','Cancel',...
                'Position',[0.181403828623519 0.185736434108527 0.0628988149498633 0.0406976744186047],...
                'Callback',@(hObject,event) cancel_button_Callback(this,hObject,event),...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','cancel_button' );

            % radiobutton to choose Series UID 
            h24 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'String','Series Instance UID /',...
                'Tooltip', 'Choose a series instance UID',...
                'Style','radiobutton',...
                'Value',1,...
                'Position',[0.339283500455788 0.434421475739305 0.143118422143035 0.0345248349124318],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) SeriesUID_radiobutton_Callback(this,hObject,event),...
                'Tag','SeriesUID_radiobutton' );

            %Radiobutton to Choose Series Number
            h25 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'String','Series Number )',...
                'Tooltip', 'Choose a series number',...
                'Style','radiobutton',...
                'Position',[0.46272826717494 0.432555268446741 0.0999864092152151 0.0345248349124318],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) SeriesNumber_radiobutton_Callback(this,hObject,event),...
                'Tag','SeriesNumber_radiobutton' );

            % new panel 
            h26 = uipanel(...
                'Parent',h1,...
                'Title','Resolution',...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','uipanel1',...
                'Clipping','off',...
                'Position',[0.0446672743846855 0.131162790697674 0.103919781221513 0.174418604651163] );

            %Text Resolution in X
            txt = sprintf('Resolution of the chosen image series\nAdjust it to import an interpolated cube');
            h32 = uicontrol(...
                'Parent',h26,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','x step:',...
                'Style','text',...
                'Tooltip', txt,...
                'Position',[0.0727272727272727 0.614457831325301 0.381818181818182 0.253012048192771],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','text7' );


            %Text Resolution in Y 
            txt = sprintf('Resolution of the chosen image series\nAdjust it to import an interpolated cube');
            h27 = uicontrol(...
                'Parent',h26,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','y step:',...                
                'Tooltip',txt,...
                'Style','text',...
                'Position',[0.0727272727272727 0.337349397590362 0.718181818181818 0.253012048192771],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','text8' );

            %Text Resolution in Z 
            txt = sprintf('Resolution of the chosen image series\nAdjust it to import an interpolated cube');
            h28 = uicontrol(...
                'Parent',h26,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'String','z step:',...
                'Tooltip',txt,...
                'Style','text',...
                'Position',[0.0727272727272727 0.0602409638554217 0.718181818181818 0.253012048192771],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','text9' );

            %Edit Resolution of interpolated cube : X
            txt = sprintf('Resolution of the chosen image series\nAdjust it to import an interpolated cube');
            h29 = uicontrol(...
                'Parent',h26,...
                'Units','normalized',...
                'Style','edit',...
                'Position',[0.463636363636364 0.653846153846154 0.4 0.217948717948718],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tooltip',txt,...
                'Tag','resx_edit');

            %Edit Resolution of interpolated cube : Y
            txt = sprintf('Resolution of the chosen image series\nAdjust it to import an interpolated cube');
            h30 = uicontrol(...
                'Parent',h26,...
                'Units','normalized',...
                'Style','edit',...
                'Position',[0.463636363636364 0.385542168674699 0.4 0.216867469879518],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tooltip',txt,...
                'Tag','resy_edit');


            %Edit Resolution of interpolated cube : Z
            txt = sprintf('Resolution of the chosen image series\nAdjust it to import an interpolated cube');
            h31 = uicontrol(...
                'Parent',h26,...
                'Units','normalized',...
                'Style','edit',...
                'Position',[0.463636363636364 0.120481927710843 0.4 0.216867469879518],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tooltip',txt,...
                'Tag','resz_edit');
            
            %Listbox Select RT dose
            h34 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'Max',32,...
                'Style','listbox',...
                'Value',1,...
                'Position',[0.660893345487694 0.493565891472868 0.320875113947129 0.186046511627907],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) doseseries_listbox_Callback(this,hObject,event),...
                'Tooltip', 'Select an RT dose',...
                'Tag','doseseries_listbox');

            %Listbox to choose RT plan
            h35 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
               'HorizontalAlignment','left',...
                'Max',2,...
                'Style','listbox',...
                'Value',1,...
                'Position',[0.318140382862352 0.493565891472868 0.320875113947128 0.186046511627907],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) rtplan_listbox_Callback(this,hObject,event),...
                'Tooltip', 'Select an RT plan',...
                'Tag','rtplan_listbox');

            %Edit choose patient case directories
            h36 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'HorizontalAlignment','left',...
                'Style','edit',...
                'Position',[0.0447897623400366 0.742867647058823 0.857404021937843 0.0477941176470588],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) dir_path_field_Callback(this,hObject,event),...
                'Tooltip', 'Choose the input directory',...
                'Tag','dir_path_field' );

            %Import Patient name 
            h37 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'String',{  'Import patient name & DICOM meta information'; '                                         '; '                                         ' },...
                'Style','checkbox',...
                'Value',1,...
                'Position',[0.0446672743846855 0.395661785816824 0.258805834092981 0.0484496124031008],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) checkPatientName_Callback(this,hObject,event),...
                'Tag','checkPatientName' );

            %Checkbox use RT Dose Grid resolution
            h38 = uicontrol(...
                'Parent',h1,...
                'Units','normalized',...
                'String',{  'Use RT Dose grid'; '                                         '; '                                         ' },...
                'Tooltip', 'Use the resolution of the dose grid',...
                'Style','checkbox',...
                'Position',[0.0446672743846855 0.349150157909848 0.228805834092981 0.0484496124031008],...
                'BackgroundColor',matRad_cfg.gui.backgroundColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Callback',@(hObject,event) checkUseRTdoseGrid_Callback(this,hObject,event),...
                'Enable','off',...
                'Tag','checkbox3' );

              this.createHandles();

            end 
    end    
    
    methods (Access = private)
        % SCAN FUNKTION
        function this = scan(this, hObject, eventdata)
            handles = this.handles;
            [fileList, patient_listbox] = matRad_scanDicomImportFolder(get(handles.dir_path_field,'String'));
            if iscell(patient_listbox)
                handles.fileList =  fileList;
                %handles.patient_listbox.String = patient_listbox;
                set(handles.patient_listbox,'String',patient_listbox,'Value',1);
                % guidata(hObject, handles);
                this.handles = handles;
            end
        end
    end
    

    
end

