classdef matRad_ParetoNavigationButtonWidget < matRad_Widget
    % matRad_ParetoNavigationButtonWidget class to generate GUI widget 
    % to display buttons with additional functionality for Pareto surface
    % navigation
    %
    % References
    %   -
    %
    % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %
    % Copyright 2024 the matRad development team. 
    % 
    % This file is part of the matRad project. It is subject to the license 
    % terms in the LICENSE file found in the top-level directory of this 
    % distribution and at https://github.com/e0404/matRad/LICENSES.txt. No part 
    % of the matRad project, including this file, may be copied, modified, 
    % propagated, or distributed except according to the terms contained in the 
    % LICENSE file.
    %
    % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    properties
        sliderWidgetHandle
        dvhWidgetHandle
    end
    
    methods
        function this = matRad_ParetoNavigationButtonWidget(handleParent,sliderWidgetHandle,dvhWidgetHandle)

            this = this@matRad_Widget(handleParent);
            this.sliderWidgetHandle = sliderWidgetHandle;
            this.dvhWidgetHandle = dvhWidgetHandle;
        end
    end
    
    methods (Access = protected)
        function this = createLayout(this)
            ButtonPanel= this.widgetHandle;
            matRad_cfg = MatRad_Config.instance();
            %About button
            DVHButton = uicontrol(...
                'Parent',ButtonPanel,...
                'Units','normalized',...
                'String','Show DVH',...
                'Tooltip', 'Show the DVH for the current plan',...
                'Position',[0.1 0.55 0.35 0.25],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','btn_export',...
                'Callback',@this.DVHButton_callback);

            exportButton = uicontrol(...
                'Parent',ButtonPanel,...
                'Units','normalized',...
                'String','Export',...
                'Tooltip', 'Export the current plan to the main GUI',...
                'UserData',[],...
                'Position',[0.55 0.55 0.35 0.25],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','btn_export',...
                'Callback',@this.ExportButton_callback); 

            resetButton = uicontrol(...
                'Parent',ButtonPanel,...
                'Units','normalized',...
                'String','Reset constraints',...
                'Tooltip', 'Reset all slider constraints',...
                'UserData',[],...
                'Position',[0.25 0.15 0.5 0.25],...
                'BackgroundColor',matRad_cfg.gui.elementColor,...
                'ForegroundColor',matRad_cfg.gui.textColor,...
                'FontSize',matRad_cfg.gui.fontSize,...
                'FontName',matRad_cfg.gui.fontName,...
                'FontWeight',matRad_cfg.gui.fontWeight,...
                'Tag','btn_export',...
                'Callback',@this.ResetConstraintButton_callback);
        end


        function DVHButton_callback(this,~,~)
            ParetoHelperObject = evalin('base','ParetoHelperObject');
            %Shows the DVH for the current plan
            resultGUI = matRad_calcCubes(ParetoHelperObject.currentWeights,evalin('base','dij'));
            dvh = matRad_calcDVH(evalin('base','cst'),resultGUI.physicalDose,'cum');
    
            matRad_showDVH(this.dvhWidgetHandle.DVHPlotAxes,...
                dvh,evalin('base','cst'),evalin('base','pln'),ParetoHelperObject.linestyle);
            if ParetoHelperObject.linestyle < 4
                ParetoHelperObject.linestyle = ParetoHelperObject.linestyle + 1;
            else
                ParetoHelperObject.linestyle = 1;
            end
            %
           
        end

        function ExportButton_callback(this,~,~)
            ParetoHelperObject = evalin('base','ParetoHelperObject');
            %Export the current plan to the matRadGUi for better inspection
            resultGUI = matRad_calcCubes(ParetoHelperObject.currentWeights,evalin('base','dij'));
            assignin('base',"resultGUI",resultGUI);
            matRadGUI;
           
        end

        function ResetConstraintButton_callback(this,~,~)
            ParetoHelperObject = evalin('base','ParetoHelperObject');
            ParetoHelperObject.releaseObjectiveBounds();
            
            for i = 1:numel(this.sliderWidgetHandle.objectiveSliders)
                set(this.sliderWidgetHandle.objectiveSliders{i},'Min',ParetoHelperObject.lowboundSliderInit(i));
                set(this.sliderWidgetHandle.objectiveSliders{i},'Max',ParetoHelperObject.initialUpbound(i));
            end
        end


    end


end
